/* ==========================================================================
   NEO
   ========================================================================== */

/**
 * Based on inuitcss, by @csswizardry
 *
 * github.com/inuitcss | inuitcss.com
 */

/**
 * Modifications (c) 2021 Tobias Stahn
 *
 * https://github.com/tstahn/neo
 */

/**
 * This is an example neo manifest file. DO NOT MODIFY THIS FILE DIRECTLY.
 * Instead, copy and paste it into your own CSS directory and make additions,
 * extensions, and modifications there.
 */

/**
 * CONTENTS
 *
 * SETTINGS
 * Config...............Project-level configuration and feature switches.
 * Core.................neo’s core and setup settings.
 *
 * TOOLS
 * Font-size............A mixin which guarantees baseline-friendly line-heights.
 * Clearfix.............Micro clearfix mixin.
 * Hidden...............Mixin for hiding elements.
 * Sass MQ..............neo’s default media query manager.
 *
 * GENERIC
 * Box-sizing...........Better default `box-sizing`.
 * Normalize............A level playing field using @necolas’ normalize.css.
 * Reset................A tiny reset to complement normalize.css.
 * Shared...............Sensibly and tersely share some global commonalities
 *                      (particularly useful when managing vertical rhythm).
 *
 * ELEMENTS
 * Page.................Set up our document’s default `font-size` and
 *                      `line-height`.
 * Headings.............Very minimal (i.e. only font-size information) for
 *                      headings 1 through 6.
 * Images...............Base image styles.
 * Tables...............Simple table styles.
 *
 * OBJECTS
 * Wrapper..............Page constraint object.
 * Layout...............Generic layout module.
 * Media................Image- and text-like content side by side. The
 *                      poster-child of OOCSS.
 * Flag.................Table-layout-based advancement on the Media object.
 * List-bare............Lists with no bullets or indents.
 * List-inline..........A list whose items all site in a line.
 * Box..................Simple boxing abstraction.
 * Block................Image-on-top-of-text object.
 * Ratio................A container for maintaining aspect ratio of content.
 * Crop.................Provide a cropping context for media (images, etc.).
 * Table................Classes for manipulating `table`s.
 * Pack.................Pack items into available horizontal space.
 *
 * COMPONENTS
 * Buttons..............An example button component, and how it fits into the
 *                      neo framework.
 *
 * UTILITIES
 * Clearfix.............Bind our clearfix onto a utility class.
 * Widths...............Simple width helper classes.
 * Headings.............Reassigning our heading styles to helper classes.
 * Spacings.............Nudge bits of the DOM around with these spacing
 *                      classes.
 * Responsive-Spacings..Enhances the function of normal spacings for
 *                      responsive usage.
 * Print................Reset-like styles taken from the HTML5 Boilerplate.
 * Hide.................Helper classes to hide content
 */

// SETTINGS
// `@use` in partials as needed, no need to include here.





// TOOLS
// `@use` in partials as needed, no need to include here.





// GENERIC
@use 'generic/box-sizing';
@use 'generic/normalize';
@use 'generic/reset';
@use 'generic/shared';





// ELEMENTS
@use 'elements/page';
@use 'elements/headings' as elements-headings;
@use 'elements/images';
@use 'elements/tables';





// OBJECTS
//
// Uncomment and add to this section as necessary.
@use 'objects/wrapper';
@use 'objects/layout';
@use 'objects/media';
@use 'objects/flag';
@use 'objects/list-bare';
@use 'objects/list-inline';
@use 'objects/box';
@use 'objects/block';
@use 'objects/ratio';
@use 'objects/crop';
@use 'objects/table';
@use 'objects/pack';





// COMPONENTS
//
// Build and include your project’s UI components here.
@use 'components/example.buttons';





// UTILITIES
@use 'utilities/clearfix';

// Be aware that enabling offsets produces a large chunk of classes which might
// bloat your CSS, depending on the amount of breakpoints you defined.
// Only set this to `true` if you are absolutely sure about what you are doing.

@use 'utilities/widths' with ($neo-offsets: true);
@use 'utilities/headings' as utilities-headings;
@use 'utilities/spacings';
@use 'utilities/responsive-spacings' with ($neo-spacing-directions: spacings.$neo-spacing-directions);
@use 'utilities/print';
@use 'utilities/hide';
